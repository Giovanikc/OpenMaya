#include "mayaUtils.h"

/*
#define MAYA_COLORBALANCE color defaultColor = color(.5,.5,.5), \
						  color colorGain = color(1.0,1.0,1.0), \
						  color colorOffset = color(.0,.0,.0)
*/

float floatFromSRGB( float srgbFloat)
{
	float f = clamp(srgbFloat, 0.0, 1.0);
    if (f <= 0.03928)
	{
      return f/12.92;
	}
	return exp(2.4 * log((f + 0.055) / 1.055));
}

float floatToSRGB( float linearFloat)
{
	if (linearFloat <= 0.0031308)
	{
		return (linearFloat * 12.92);
	}
	return 1.055 * (exp((1 / 2.4) * log(linearFloat))) - 0.055;	
}

color fromLinearToSRGB( color linearColor)
{
	color outColor = linearColor;
	outColor[0] = floatToSRGB(outColor[0]);
	outColor[1] = floatToSRGB(outColor[1]);
	outColor[2] = floatToSRGB(outColor[2]);
	return outColor;
}

color fromSRGBToLinear( color srgbColor)
{
	color outColor = srgbColor;
	outColor[0] = floatFromSRGB(outColor[0]);
	outColor[1] = floatFromSRGB(outColor[1]);
	outColor[2] = floatFromSRGB(outColor[2]);
	return outColor;
}

shader file (vector uvCoord = 0, 
			 string fileTextureName = "",
			 int fromSRGB = 0,
			 int toSRGB = 0,
			 MAYA_COLORBALANCE,
			 output color outColor = 0)
{
	float s = 0.0;
	float t = 0.0;
	if( isconnected(uvCoord))
	{
		s = uvCoord[0];
		t = uvCoord[1];
	}else{
		s = u;
		t = v;
	}
	t = 1.0 - t;
	color C = texture(fileTextureName, s, t, "wrap", "periodic");

	if( fromSRGB > 0)
	{
		C = fromSRGBToLinear(C);
	}
	if( toSRGB > 0)
	{
		C = fromLinearToSRGB(C);
	}
	
	C = colorBalance(C, colorGain, colorOffset);
	
	outColor = C;
}

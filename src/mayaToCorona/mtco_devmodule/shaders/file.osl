#include "mayaUtils.h"

float floatFromSRGB( float srgbFloat)
{
	float f = clamp(srgbFloat, 0.0, 1.0);
    if (f <= 0.03928)
	{
      return f/12.92;
	}
	return exp(2.4 * log((f + 0.055) / 1.055));
}

float floatToSRGB( float linearFloat)
{
	if (linearFloat <= 0.0031308)
	{
		return (linearFloat * 12.92);
	}
	return 1.055 * (exp((1 / 2.4) * log(linearFloat))) - 0.055;	
}

color fromLinearToSRGB( color linearColor)
{
	color outColor = linearColor;
	outColor[0] = floatToSRGB(outColor[0]);
	outColor[1] = floatToSRGB(outColor[1]);
	outColor[2] = floatToSRGB(outColor[2]);
	return outColor;
}

color fromSRGBToLinear( color srgbColor)
{
	color outColor = srgbColor;
	outColor[0] = floatFromSRGB(outColor[0]);
	outColor[1] = floatFromSRGB(outColor[1]);
	outColor[2] = floatFromSRGB(outColor[2]);
	return outColor;
}

shader file (vector uvCoord = 0, 
			 string fileTextureName = "",
			 int fromSRGB = 0,
			 int toSRGB = 0,
			 int textureFilter = 0,
			 float textureFilterWidth = 1.0,
			 float textureBlur = 0.0,
			 MAYA_COLORBALANCE,
			 MAYA_DEFAULT_OUTPUT)
{
	float s = u;
	float t = v;
	if( isconnected(uvCoord))
	{
		s = uvCoord[0];
		t = uvCoord[1];
	}
	t = 1.0 - t;
	string filters[4] = {"smartcubic", "cubic", "linear", "closest"};
	string filter = filters[textureFilter];
	int numChannels = 0;		
	color C = texture(fileTextureName, s, t, "wrap", "periodic", "interp", filter, "width", textureFilterWidth, "blur", textureBlur);
	//int infoResult = gettextureinfo (fileTextureName, "channels", numChannels);
	//if( infoResult == 1 )
	//{
	//	if( numChannels == 1)
	//	{
	//		C[1] = C[0];
	//		C[2] = C[0];
	//	}
	//}
	if( fromSRGB > 0)
	{
		C = fromSRGBToLinear(C);
	}
	if( toSRGB > 0)
	{
		C = fromLinearToSRGB(C);
	}
	vector CB = colorBalance(vector(C), colorGain, colorOffset);	
	if( invert )
	{
		CB = vector(1.0) - CB;
	}
	outColor = CB;
	//if( alphaIsLuminance == 1)
	outAlpha = luminance(color(outColor));	
}
